// Generated by CoffeeScript 1.7.1
var Fasta, GenericReader, Seq, Str,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Str = require("./strings");

GenericReader = require("./generic_reader");

Seq = require("biojs-model").seq;

module.exports = Fasta = (function(_super) {
  __extends(Fasta, _super);

  function Fasta() {
    return Fasta.__super__.constructor.apply(this, arguments);
  }

  Fasta.parse = function(text) {
    var currentSeq, database, databaseID, identifiers, k, label, line, seqs, _i, _len, _ref;
    seqs = [];
    _ref = text.split("\n");
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      line = _ref[_i];
      if (line[0] === ">" || line[0] === ";") {
        label = line.slice(1);
        currentSeq = new Seq("", label, seqs.length);
        seqs.push(currentSeq);
        if (Str.contains("|", line)) {
          identifiers = label.split("|");
          k = 1;
          while (k < identifiers.length) {
            database = identifiers[k];
            databaseID = identifiers[k + 1];
            currentSeq.meta[database] = databaseID;
            k += 2;
          }
          currentSeq.name = identifiers[identifiers.length - 1];
        }
      } else {
        currentSeq.seq += line;
      }
    }
    return seqs;
  };

  return Fasta;

})(GenericReader);
